'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.1433
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.1433.
'
Namespace WebReference
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="WebServiceCalcSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class WebServiceCalc
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private HelloWorldOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CalcurateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private vGetDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private vGetDataBarCodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private vExecuteQueryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private vGetQueryAnlyzerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private vLogInOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.PrintService.My.MySettings.Default.PrintService_WebReference_WebServiceCalc
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event HelloWorldCompleted As HelloWorldCompletedEventHandler
        
        '''<remarks/>
        Public Event CalcurateCompleted As CalcurateCompletedEventHandler
        
        '''<remarks/>
        Public Event vGetDataCompleted As vGetDataCompletedEventHandler
        
        '''<remarks/>
        Public Event vGetDataBarCodeCompleted As vGetDataBarCodeCompletedEventHandler
        
        '''<remarks/>
        Public Event vExecuteQueryCompleted As vExecuteQueryCompletedEventHandler
        
        '''<remarks/>
        Public Event vGetQueryAnlyzerCompleted As vGetQueryAnlyzerCompletedEventHandler
        
        '''<remarks/>
        Public Event vLogInCompleted As vLogInCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function HelloWorld() As String
            Dim results() As Object = Me.Invoke("HelloWorld", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub HelloWorldAsync()
            Me.HelloWorldAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub HelloWorldAsync(ByVal userState As Object)
            If (Me.HelloWorldOperationCompleted Is Nothing) Then
                Me.HelloWorldOperationCompleted = AddressOf Me.OnHelloWorldOperationCompleted
            End If
            Me.InvokeAsync("HelloWorld", New Object(-1) {}, Me.HelloWorldOperationCompleted, userState)
        End Sub
        
        Private Sub OnHelloWorldOperationCompleted(ByVal arg As Object)
            If (Not (Me.HelloWorldCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent HelloWorldCompleted(Me, New HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Calcurate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Calcurate(ByVal x As Double, ByVal y As Double) As Double
            Dim results() As Object = Me.Invoke("Calcurate", New Object() {x, y})
            Return CType(results(0),Double)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CalcurateAsync(ByVal x As Double, ByVal y As Double)
            Me.CalcurateAsync(x, y, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CalcurateAsync(ByVal x As Double, ByVal y As Double, ByVal userState As Object)
            If (Me.CalcurateOperationCompleted Is Nothing) Then
                Me.CalcurateOperationCompleted = AddressOf Me.OnCalcurateOperationCompleted
            End If
            Me.InvokeAsync("Calcurate", New Object() {x, y}, Me.CalcurateOperationCompleted, userState)
        End Sub
        
        Private Sub OnCalcurateOperationCompleted(ByVal arg As Object)
            If (Not (Me.CalcurateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CalcurateCompleted(Me, New CalcurateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/vGetData", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function vGetData(ByVal vBarCode As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("vGetData", New Object() {vBarCode})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub vGetDataAsync(ByVal vBarCode As String)
            Me.vGetDataAsync(vBarCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub vGetDataAsync(ByVal vBarCode As String, ByVal userState As Object)
            If (Me.vGetDataOperationCompleted Is Nothing) Then
                Me.vGetDataOperationCompleted = AddressOf Me.OnvGetDataOperationCompleted
            End If
            Me.InvokeAsync("vGetData", New Object() {vBarCode}, Me.vGetDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnvGetDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.vGetDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent vGetDataCompleted(Me, New vGetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/vGetDataBarCode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function vGetDataBarCode(ByVal vBarCode As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("vGetDataBarCode", New Object() {vBarCode})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub vGetDataBarCodeAsync(ByVal vBarCode As String)
            Me.vGetDataBarCodeAsync(vBarCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub vGetDataBarCodeAsync(ByVal vBarCode As String, ByVal userState As Object)
            If (Me.vGetDataBarCodeOperationCompleted Is Nothing) Then
                Me.vGetDataBarCodeOperationCompleted = AddressOf Me.OnvGetDataBarCodeOperationCompleted
            End If
            Me.InvokeAsync("vGetDataBarCode", New Object() {vBarCode}, Me.vGetDataBarCodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnvGetDataBarCodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.vGetDataBarCodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent vGetDataBarCodeCompleted(Me, New vGetDataBarCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/vExecuteQuery", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function vExecuteQuery(ByVal vStrQuery As String) As Integer
            Dim results() As Object = Me.Invoke("vExecuteQuery", New Object() {vStrQuery})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub vExecuteQueryAsync(ByVal vStrQuery As String)
            Me.vExecuteQueryAsync(vStrQuery, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub vExecuteQueryAsync(ByVal vStrQuery As String, ByVal userState As Object)
            If (Me.vExecuteQueryOperationCompleted Is Nothing) Then
                Me.vExecuteQueryOperationCompleted = AddressOf Me.OnvExecuteQueryOperationCompleted
            End If
            Me.InvokeAsync("vExecuteQuery", New Object() {vStrQuery}, Me.vExecuteQueryOperationCompleted, userState)
        End Sub
        
        Private Sub OnvExecuteQueryOperationCompleted(ByVal arg As Object)
            If (Not (Me.vExecuteQueryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent vExecuteQueryCompleted(Me, New vExecuteQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/vGetQueryAnlyzer", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function vGetQueryAnlyzer(ByVal vStrQuery As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("vGetQueryAnlyzer", New Object() {vStrQuery})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub vGetQueryAnlyzerAsync(ByVal vStrQuery As String)
            Me.vGetQueryAnlyzerAsync(vStrQuery, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub vGetQueryAnlyzerAsync(ByVal vStrQuery As String, ByVal userState As Object)
            If (Me.vGetQueryAnlyzerOperationCompleted Is Nothing) Then
                Me.vGetQueryAnlyzerOperationCompleted = AddressOf Me.OnvGetQueryAnlyzerOperationCompleted
            End If
            Me.InvokeAsync("vGetQueryAnlyzer", New Object() {vStrQuery}, Me.vGetQueryAnlyzerOperationCompleted, userState)
        End Sub
        
        Private Sub OnvGetQueryAnlyzerOperationCompleted(ByVal arg As Object)
            If (Not (Me.vGetQueryAnlyzerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent vGetQueryAnlyzerCompleted(Me, New vGetQueryAnlyzerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/vLogIn", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function vLogIn(ByVal vUserID As String, ByVal vPassWord As String) As String
            Dim results() As Object = Me.Invoke("vLogIn", New Object() {vUserID, vPassWord})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub vLogInAsync(ByVal vUserID As String, ByVal vPassWord As String)
            Me.vLogInAsync(vUserID, vPassWord, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub vLogInAsync(ByVal vUserID As String, ByVal vPassWord As String, ByVal userState As Object)
            If (Me.vLogInOperationCompleted Is Nothing) Then
                Me.vLogInOperationCompleted = AddressOf Me.OnvLogInOperationCompleted
            End If
            Me.InvokeAsync("vLogIn", New Object() {vUserID, vPassWord}, Me.vLogInOperationCompleted, userState)
        End Sub
        
        Private Sub OnvLogInOperationCompleted(ByVal arg As Object)
            If (Not (Me.vLogInCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent vLogInCompleted(Me, New vLogInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")>  _
    Public Delegate Sub HelloWorldCompletedEventHandler(ByVal sender As Object, ByVal e As HelloWorldCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class HelloWorldCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")>  _
    Public Delegate Sub CalcurateCompletedEventHandler(ByVal sender As Object, ByVal e As CalcurateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CalcurateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Double
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Double)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")>  _
    Public Delegate Sub vGetDataCompletedEventHandler(ByVal sender As Object, ByVal e As vGetDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class vGetDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")>  _
    Public Delegate Sub vGetDataBarCodeCompletedEventHandler(ByVal sender As Object, ByVal e As vGetDataBarCodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class vGetDataBarCodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")>  _
    Public Delegate Sub vExecuteQueryCompletedEventHandler(ByVal sender As Object, ByVal e As vExecuteQueryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class vExecuteQueryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")>  _
    Public Delegate Sub vGetQueryAnlyzerCompletedEventHandler(ByVal sender As Object, ByVal e As vGetQueryAnlyzerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class vGetQueryAnlyzerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")>  _
    Public Delegate Sub vLogInCompletedEventHandler(ByVal sender As Object, ByVal e As vLogInCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class vLogInCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
